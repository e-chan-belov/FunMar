mal {
    a -> a"a";
    scheme {
        "9a" -> "8a1";
        "8a" -> "7a1";
        "7a" -> "6a1";
        "6a" -> "5a1";
        "5a" -> "4a1";
        "4a" -> "3a1";
        "3a" -> "2a1";
        "2a" -> "1a1";
        "1a" -> "0b1";
        "0a" -> "0b";
        
        "0b" -> "b0";
        
        "9b" -> "8g";
        "8b" -> "7g";
        "7b" -> "6g";
        "6b" -> "5g";
        "5b" -> "4g";
        "4b" -> "3g";
        "3b" -> "2g";
        "2b" -> "1g";
        "1b" -> "0g";
        
        "g0" -> "9g";
        "g" -> "a1";
        "b" -> "f";
        
        "f0" -> "f";
        "f1" -> "1";
    };
    "f" -> "";
}

cmpOperation {
    first "#" second -> mal(first) "#" mal(second);
    scheme {
        "1#1" -> "#";
    };
}

cmpShow {
    first "#" second -> cmpOperation(first "#" second) "/" first "#" second;
    
    left "1#/" first "#" second => second "#" first;
    "1#/" first "#" second => second "#" first;
    "#" secondMalloced "/" first "#" second => first "#" second;
    "#/" -> "";
}

deleteUnusedComma {
    "," -> "#,";
    scheme {
        "#," value "," -> "," value "#,";
    };
    "#," -> "";
}

cmpSwapBubble {
    first "," second -> cmpShow(first "#" second);
    "#" -> ",/";
}

bubbleSort {
    first "," array -> "/" first "," array;
    scheme {
        "/" first "," second "," -> cmpSwapBubble(first "," second) ",";
    };
    array "/" sortedArray -> bubbleSort(array) sortedArray;
}

main {
    a -> a ",";
    
    a -> bubbleSort(a);
    
    a -> deleteUnusedComma(a);
}
